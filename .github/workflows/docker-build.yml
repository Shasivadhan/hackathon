name: CI/CD - Build & Push Docker Image

on:
  push:
    branches: [ "main" ]      # push to main -> build & push
  pull_request:
    branches: [ "main" ]      # PRs -> build only (no push)

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Set up JDK 21
        uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: 21

      - name: Cache Maven
        uses: actions/cache@v4
        with:
          path: ~/.m2
          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
          restore-keys: ${{ runner.os }}-maven-

      - name: Build JAR
        run: mvn -B clean package -DskipTests

      # For PRs: just ensure the Docker build works (no push, no secrets)
      - name: Docker build (PR only)
        if: github.event_name == 'pull_request'
        uses: docker/build-push-action@v6
        with:
          context: .
          push: false
          tags: local/test:pr

  publish:
    needs: build
    if: github.event_name == 'push'         # only on push to main
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      # Fail fast if secrets are missing
      - name: Check Docker Hub secrets
        run: |
          test -n "${{ secrets.DOCKER_HUB_USERNAME }}" || { echo "Missing DOCKER_HUB_USERNAME"; exit 1; }
          test -n "${{ secrets.DOCKER_HUB_TOKEN }}" || { echo "Missing DOCKER_HUB_TOKEN"; exit 1; }

      # Build the image name into environment (avoids $GITHUB_OUTPUT formatting issues)
      - name: Set image name
        run: echo "IMAGE=${{ secrets.DOCKER_HUB_USERNAME }}/cart-order-service" >> $GITHUB_ENV

      - name: Show image name (debug)
        run: echo "Using image: $IMAGE"

      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_TOKEN }}

      - name: Build & Push image
        uses: docker/build-push-action@v6
        with:
          context: .
          push: true
          tags: |
            ${{ env.IMAGE }}:latest
            ${{ env.IMAGE }}:${{ github.sha }}
